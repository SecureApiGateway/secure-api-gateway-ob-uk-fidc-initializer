{
  "name" : "Open Banking Dynamic Policy",
  "context" : "POLICY_CONDITION",
  "description" : "Open Banking Dynamic Policy",
  "language" : "JAVASCRIPT",
  "script" : ""
}
